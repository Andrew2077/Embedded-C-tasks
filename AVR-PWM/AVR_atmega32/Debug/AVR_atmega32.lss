
AVR_atmega32.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000029e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000002f2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000002f2  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000324  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000080  00000000  00000000  00000360  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000085f  00000000  00000000  000003e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006a0  00000000  00000000  00000c3f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000004ec  00000000  00000000  000012df  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000ac  00000000  00000000  000017cc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000372  00000000  00000000  00001878  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000037c  00000000  00000000  00001bea  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000050  00000000  00000000  00001f66  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 2d 01 	call	0x25a	; 0x25a <main>
  64:	0c 94 4d 01 	jmp	0x29a	; 0x29a <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <DIO_vSetPinDir>:
		default:
		    if ((u8)1==val){
                PORTA |=(u8)( ((u8)1) << PinNumber);
            }
            else {
                PORTA &=(u8) (~((u8)(((u8)1)<<PinNumber)));
  6c:	82 34       	cpi	r24, 0x42	; 66
  6e:	19 f1       	breq	.+70     	; 0xb6 <DIO_vSetPinDir+0x4a>
  70:	18 f4       	brcc	.+6      	; 0x78 <DIO_vSetPinDir+0xc>
  72:	81 34       	cpi	r24, 0x41	; 65
  74:	39 f0       	breq	.+14     	; 0x84 <DIO_vSetPinDir+0x18>
  76:	6a c0       	rjmp	.+212    	; 0x14c <DIO_vSetPinDir+0xe0>
  78:	83 34       	cpi	r24, 0x43	; 67
  7a:	b1 f1       	breq	.+108    	; 0xe8 <DIO_vSetPinDir+0x7c>
  7c:	84 34       	cpi	r24, 0x44	; 68
  7e:	09 f4       	brne	.+2      	; 0x82 <DIO_vSetPinDir+0x16>
  80:	4c c0       	rjmp	.+152    	; 0x11a <DIO_vSetPinDir+0xae>
  82:	64 c0       	rjmp	.+200    	; 0x14c <DIO_vSetPinDir+0xe0>
  84:	41 30       	cpi	r20, 0x01	; 1
  86:	59 f4       	brne	.+22     	; 0x9e <DIO_vSetPinDir+0x32>
  88:	2a b3       	in	r18, 0x1a	; 26
  8a:	81 e0       	ldi	r24, 0x01	; 1
  8c:	90 e0       	ldi	r25, 0x00	; 0
  8e:	02 c0       	rjmp	.+4      	; 0x94 <DIO_vSetPinDir+0x28>
  90:	88 0f       	add	r24, r24
  92:	99 1f       	adc	r25, r25
  94:	6a 95       	dec	r22
  96:	e2 f7       	brpl	.-8      	; 0x90 <DIO_vSetPinDir+0x24>
  98:	82 2b       	or	r24, r18
  9a:	8a bb       	out	0x1a, r24	; 26
  9c:	08 95       	ret
  9e:	2a b3       	in	r18, 0x1a	; 26
  a0:	81 e0       	ldi	r24, 0x01	; 1
  a2:	90 e0       	ldi	r25, 0x00	; 0
  a4:	02 c0       	rjmp	.+4      	; 0xaa <DIO_vSetPinDir+0x3e>
  a6:	88 0f       	add	r24, r24
  a8:	99 1f       	adc	r25, r25
  aa:	6a 95       	dec	r22
  ac:	e2 f7       	brpl	.-8      	; 0xa6 <DIO_vSetPinDir+0x3a>
  ae:	80 95       	com	r24
  b0:	82 23       	and	r24, r18
  b2:	8a bb       	out	0x1a, r24	; 26
  b4:	08 95       	ret
  b6:	41 30       	cpi	r20, 0x01	; 1
  b8:	59 f4       	brne	.+22     	; 0xd0 <DIO_vSetPinDir+0x64>
  ba:	27 b3       	in	r18, 0x17	; 23
  bc:	81 e0       	ldi	r24, 0x01	; 1
  be:	90 e0       	ldi	r25, 0x00	; 0
  c0:	02 c0       	rjmp	.+4      	; 0xc6 <DIO_vSetPinDir+0x5a>
  c2:	88 0f       	add	r24, r24
  c4:	99 1f       	adc	r25, r25
  c6:	6a 95       	dec	r22
  c8:	e2 f7       	brpl	.-8      	; 0xc2 <DIO_vSetPinDir+0x56>
  ca:	82 2b       	or	r24, r18
  cc:	87 bb       	out	0x17, r24	; 23
  ce:	08 95       	ret
  d0:	27 b3       	in	r18, 0x17	; 23
  d2:	81 e0       	ldi	r24, 0x01	; 1
  d4:	90 e0       	ldi	r25, 0x00	; 0
  d6:	02 c0       	rjmp	.+4      	; 0xdc <DIO_vSetPinDir+0x70>
  d8:	88 0f       	add	r24, r24
  da:	99 1f       	adc	r25, r25
  dc:	6a 95       	dec	r22
  de:	e2 f7       	brpl	.-8      	; 0xd8 <DIO_vSetPinDir+0x6c>
  e0:	80 95       	com	r24
  e2:	82 23       	and	r24, r18
  e4:	87 bb       	out	0x17, r24	; 23
  e6:	08 95       	ret
  e8:	41 30       	cpi	r20, 0x01	; 1
  ea:	59 f4       	brne	.+22     	; 0x102 <DIO_vSetPinDir+0x96>
  ec:	24 b3       	in	r18, 0x14	; 20
  ee:	81 e0       	ldi	r24, 0x01	; 1
  f0:	90 e0       	ldi	r25, 0x00	; 0
  f2:	02 c0       	rjmp	.+4      	; 0xf8 <DIO_vSetPinDir+0x8c>
  f4:	88 0f       	add	r24, r24
  f6:	99 1f       	adc	r25, r25
  f8:	6a 95       	dec	r22
  fa:	e2 f7       	brpl	.-8      	; 0xf4 <DIO_vSetPinDir+0x88>
  fc:	82 2b       	or	r24, r18
  fe:	84 bb       	out	0x14, r24	; 20
 100:	08 95       	ret
 102:	24 b3       	in	r18, 0x14	; 20
 104:	81 e0       	ldi	r24, 0x01	; 1
 106:	90 e0       	ldi	r25, 0x00	; 0
 108:	02 c0       	rjmp	.+4      	; 0x10e <DIO_vSetPinDir+0xa2>
 10a:	88 0f       	add	r24, r24
 10c:	99 1f       	adc	r25, r25
 10e:	6a 95       	dec	r22
 110:	e2 f7       	brpl	.-8      	; 0x10a <DIO_vSetPinDir+0x9e>
 112:	80 95       	com	r24
 114:	82 23       	and	r24, r18
 116:	84 bb       	out	0x14, r24	; 20
 118:	08 95       	ret
 11a:	41 30       	cpi	r20, 0x01	; 1
 11c:	59 f4       	brne	.+22     	; 0x134 <DIO_vSetPinDir+0xc8>
 11e:	21 b3       	in	r18, 0x11	; 17
 120:	81 e0       	ldi	r24, 0x01	; 1
 122:	90 e0       	ldi	r25, 0x00	; 0
 124:	02 c0       	rjmp	.+4      	; 0x12a <DIO_vSetPinDir+0xbe>
 126:	88 0f       	add	r24, r24
 128:	99 1f       	adc	r25, r25
 12a:	6a 95       	dec	r22
 12c:	e2 f7       	brpl	.-8      	; 0x126 <DIO_vSetPinDir+0xba>
 12e:	82 2b       	or	r24, r18
 130:	81 bb       	out	0x11, r24	; 17
 132:	08 95       	ret
 134:	21 b3       	in	r18, 0x11	; 17
 136:	81 e0       	ldi	r24, 0x01	; 1
 138:	90 e0       	ldi	r25, 0x00	; 0
 13a:	02 c0       	rjmp	.+4      	; 0x140 <DIO_vSetPinDir+0xd4>
 13c:	88 0f       	add	r24, r24
 13e:	99 1f       	adc	r25, r25
 140:	6a 95       	dec	r22
 142:	e2 f7       	brpl	.-8      	; 0x13c <DIO_vSetPinDir+0xd0>
 144:	80 95       	com	r24
 146:	82 23       	and	r24, r18
 148:	81 bb       	out	0x11, r24	; 17
 14a:	08 95       	ret
 14c:	41 30       	cpi	r20, 0x01	; 1
 14e:	59 f4       	brne	.+22     	; 0x166 <DIO_vSetPinDir+0xfa>
 150:	2a b3       	in	r18, 0x1a	; 26
 152:	81 e0       	ldi	r24, 0x01	; 1
 154:	90 e0       	ldi	r25, 0x00	; 0
 156:	02 c0       	rjmp	.+4      	; 0x15c <DIO_vSetPinDir+0xf0>
 158:	88 0f       	add	r24, r24
 15a:	99 1f       	adc	r25, r25
 15c:	6a 95       	dec	r22
 15e:	e2 f7       	brpl	.-8      	; 0x158 <DIO_vSetPinDir+0xec>
 160:	82 2b       	or	r24, r18
 162:	8a bb       	out	0x1a, r24	; 26
 164:	08 95       	ret
 166:	2a b3       	in	r18, 0x1a	; 26
 168:	81 e0       	ldi	r24, 0x01	; 1
 16a:	90 e0       	ldi	r25, 0x00	; 0
 16c:	02 c0       	rjmp	.+4      	; 0x172 <DIO_vSetPinDir+0x106>
 16e:	88 0f       	add	r24, r24
 170:	99 1f       	adc	r25, r25
 172:	6a 95       	dec	r22
 174:	e2 f7       	brpl	.-8      	; 0x16e <DIO_vSetPinDir+0x102>
 176:	80 95       	com	r24
 178:	82 23       	and	r24, r18
 17a:	8a bb       	out	0x1a, r24	; 26
 17c:	08 95       	ret

0000017e <DIO_vReadPin>:


u8 DIO_vReadPin (u8 PortName , u8 PinNumber){
	u8 val= (u8) 0;
	
	switch(PortName){
 17e:	82 34       	cpi	r24, 0x42	; 66
 180:	d9 f0       	breq	.+54     	; 0x1b8 <DIO_vReadPin+0x3a>
 182:	18 f4       	brcc	.+6      	; 0x18a <DIO_vReadPin+0xc>
 184:	81 34       	cpi	r24, 0x41	; 65
 186:	31 f0       	breq	.+12     	; 0x194 <DIO_vReadPin+0x16>
 188:	4d c0       	rjmp	.+154    	; 0x224 <DIO_vReadPin+0xa6>
 18a:	83 34       	cpi	r24, 0x43	; 67
 18c:	39 f1       	breq	.+78     	; 0x1dc <DIO_vReadPin+0x5e>
 18e:	84 34       	cpi	r24, 0x44	; 68
 190:	b9 f1       	breq	.+110    	; 0x200 <DIO_vReadPin+0x82>
 192:	48 c0       	rjmp	.+144    	; 0x224 <DIO_vReadPin+0xa6>
		case (u8)'A':
		val=(PINA & (u8)( ((u8)1) << PinNumber))>>PinNumber;
 194:	29 b3       	in	r18, 0x19	; 25
 196:	81 e0       	ldi	r24, 0x01	; 1
 198:	90 e0       	ldi	r25, 0x00	; 0
 19a:	06 2e       	mov	r0, r22
 19c:	02 c0       	rjmp	.+4      	; 0x1a2 <DIO_vReadPin+0x24>
 19e:	88 0f       	add	r24, r24
 1a0:	99 1f       	adc	r25, r25
 1a2:	0a 94       	dec	r0
 1a4:	e2 f7       	brpl	.-8      	; 0x19e <DIO_vReadPin+0x20>
 1a6:	30 e0       	ldi	r19, 0x00	; 0
 1a8:	82 23       	and	r24, r18
 1aa:	93 23       	and	r25, r19
 1ac:	02 c0       	rjmp	.+4      	; 0x1b2 <DIO_vReadPin+0x34>
 1ae:	95 95       	asr	r25
 1b0:	87 95       	ror	r24
 1b2:	6a 95       	dec	r22
 1b4:	e2 f7       	brpl	.-8      	; 0x1ae <DIO_vReadPin+0x30>
		break;
 1b6:	08 95       	ret
		case (u8)'B':
		val=(PINB & (u8)( ((u8)1) << PinNumber) )>>PinNumber;
 1b8:	26 b3       	in	r18, 0x16	; 22
 1ba:	81 e0       	ldi	r24, 0x01	; 1
 1bc:	90 e0       	ldi	r25, 0x00	; 0
 1be:	06 2e       	mov	r0, r22
 1c0:	02 c0       	rjmp	.+4      	; 0x1c6 <DIO_vReadPin+0x48>
 1c2:	88 0f       	add	r24, r24
 1c4:	99 1f       	adc	r25, r25
 1c6:	0a 94       	dec	r0
 1c8:	e2 f7       	brpl	.-8      	; 0x1c2 <DIO_vReadPin+0x44>
 1ca:	30 e0       	ldi	r19, 0x00	; 0
 1cc:	82 23       	and	r24, r18
 1ce:	93 23       	and	r25, r19
 1d0:	02 c0       	rjmp	.+4      	; 0x1d6 <DIO_vReadPin+0x58>
 1d2:	95 95       	asr	r25
 1d4:	87 95       	ror	r24
 1d6:	6a 95       	dec	r22
 1d8:	e2 f7       	brpl	.-8      	; 0x1d2 <DIO_vReadPin+0x54>
		break;		
 1da:	08 95       	ret
		case (u8)'C':
		val=(PINC & (u8)( ((u8)1) << PinNumber) )>>PinNumber;
 1dc:	23 b3       	in	r18, 0x13	; 19
 1de:	81 e0       	ldi	r24, 0x01	; 1
 1e0:	90 e0       	ldi	r25, 0x00	; 0
 1e2:	06 2e       	mov	r0, r22
 1e4:	02 c0       	rjmp	.+4      	; 0x1ea <DIO_vReadPin+0x6c>
 1e6:	88 0f       	add	r24, r24
 1e8:	99 1f       	adc	r25, r25
 1ea:	0a 94       	dec	r0
 1ec:	e2 f7       	brpl	.-8      	; 0x1e6 <DIO_vReadPin+0x68>
 1ee:	30 e0       	ldi	r19, 0x00	; 0
 1f0:	82 23       	and	r24, r18
 1f2:	93 23       	and	r25, r19
 1f4:	02 c0       	rjmp	.+4      	; 0x1fa <DIO_vReadPin+0x7c>
 1f6:	95 95       	asr	r25
 1f8:	87 95       	ror	r24
 1fa:	6a 95       	dec	r22
 1fc:	e2 f7       	brpl	.-8      	; 0x1f6 <DIO_vReadPin+0x78>
		break;	
 1fe:	08 95       	ret
		case (u8)'D':
		val=(PIND & (u8)( ((u8)1) << PinNumber) )>>PinNumber;
 200:	20 b3       	in	r18, 0x10	; 16
 202:	81 e0       	ldi	r24, 0x01	; 1
 204:	90 e0       	ldi	r25, 0x00	; 0
 206:	06 2e       	mov	r0, r22
 208:	02 c0       	rjmp	.+4      	; 0x20e <DIO_vReadPin+0x90>
 20a:	88 0f       	add	r24, r24
 20c:	99 1f       	adc	r25, r25
 20e:	0a 94       	dec	r0
 210:	e2 f7       	brpl	.-8      	; 0x20a <DIO_vReadPin+0x8c>
 212:	30 e0       	ldi	r19, 0x00	; 0
 214:	82 23       	and	r24, r18
 216:	93 23       	and	r25, r19
 218:	02 c0       	rjmp	.+4      	; 0x21e <DIO_vReadPin+0xa0>
 21a:	95 95       	asr	r25
 21c:	87 95       	ror	r24
 21e:	6a 95       	dec	r22
 220:	e2 f7       	brpl	.-8      	; 0x21a <DIO_vReadPin+0x9c>
		break;	
 222:	08 95       	ret
		default:
		    val=(PINA & (u8)( ((u8)1) << PinNumber) )>>PinNumber;
 224:	29 b3       	in	r18, 0x19	; 25
 226:	81 e0       	ldi	r24, 0x01	; 1
 228:	90 e0       	ldi	r25, 0x00	; 0
 22a:	06 2e       	mov	r0, r22
 22c:	02 c0       	rjmp	.+4      	; 0x232 <DIO_vReadPin+0xb4>
 22e:	88 0f       	add	r24, r24
 230:	99 1f       	adc	r25, r25
 232:	0a 94       	dec	r0
 234:	e2 f7       	brpl	.-8      	; 0x22e <DIO_vReadPin+0xb0>
 236:	30 e0       	ldi	r19, 0x00	; 0
 238:	82 23       	and	r24, r18
 23a:	93 23       	and	r25, r19
 23c:	02 c0       	rjmp	.+4      	; 0x242 <DIO_vReadPin+0xc4>
 23e:	95 95       	asr	r25
 240:	87 95       	ror	r24
 242:	6a 95       	dec	r22
 244:	e2 f7       	brpl	.-8      	; 0x23e <DIO_vReadPin+0xc0>
		    break;
	}		
	return val;
}
 246:	08 95       	ret

00000248 <INITIALZIE_PWM>:
	
	*/ 
	
	/* configure TCCR0 reg -- TIMER 0
	/* TCCR0 = (1<<WGM00) | (1<<WGM01) |  (1<<COM01) | (1 <<CS01); */ 
	TCCR0 =(uint8_t) ((uint8_t) (((uint8_t)1)<<WGM00) |(uint8_t) (((uint8_t)1)<<WGM01) |(uint8_t) (((uint8_t)1)<<COM01) |(uint8_t) (((uint8_t)1)<<CS01) );
 248:	8a e6       	ldi	r24, 0x6A	; 106
 24a:	83 bf       	out	0x33, r24	; 51
	/* Set direction of PB3 bin output*/ 
	DDRB |=(uint8_t) (((uint8_t)1)<<PB3);
 24c:	87 b3       	in	r24, 0x17	; 23
 24e:	88 60       	ori	r24, 0x08	; 8
 250:	87 bb       	out	0x17, r24	; 23
	
	/* intialize 0 timer*/ 
	TCNT0 = (uint8_t) 0;	
 252:	12 be       	out	0x32, r1	; 50
 254:	08 95       	ret

00000256 <SET_PWM_OUTPUT>:
	OCR0 - Output reg 
	
	function , choose Duty cycle and write on the OCR0 reg 
	*/
	
	OCR0 = (uint8_t)duty;
 256:	8c bf       	out	0x3c, r24	; 60
 258:	08 95       	ret

0000025a <main>:

int main(void);

int main(void)
{
	INITIALZIE_PWM();
 25a:	0e 94 24 01 	call	0x248	; 0x248 <INITIALZIE_PWM>
	uint8_t brightness=0;
	SET_PWM_OUTPUT(brightness);
 25e:	80 e0       	ldi	r24, 0x00	; 0
 260:	0e 94 2b 01 	call	0x256	; 0x256 <SET_PWM_OUTPUT>
	DIO_vSetPinDir( (u8)'B' ,(u8) 0 ,(u8) INPUT);
 264:	40 e0       	ldi	r20, 0x00	; 0
 266:	60 e0       	ldi	r22, 0x00	; 0
 268:	82 e4       	ldi	r24, 0x42	; 66
 26a:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_vSetPinDir>
int main(void);

int main(void)
{
	INITIALZIE_PWM();
	uint8_t brightness=0;
 26e:	c0 e0       	ldi	r28, 0x00	; 0
	SET_PWM_OUTPUT(brightness);
	DIO_vSetPinDir( (u8)'B' ,(u8) 0 ,(u8) INPUT);
	
	while(1)
	{
		if( DIO_vReadPin((u8) 'B' ,(u8) 0))
 270:	60 e0       	ldi	r22, 0x00	; 0
 272:	82 e4       	ldi	r24, 0x42	; 66
 274:	0e 94 bf 00 	call	0x17e	; 0x17e <DIO_vReadPin>
 278:	88 23       	and	r24, r24
 27a:	d1 f3       	breq	.-12     	; 0x270 <main+0x16>
		{
			if(brightness >= (uint8_t) 250)
 27c:	ca 3f       	cpi	r28, 0xFA	; 250
 27e:	10 f4       	brcc	.+4      	; 0x284 <main+0x2a>
			{
				brightness= (uint8_t) 0;
			}
			else 
			{
				brightness += (uint8_t) 25;
 280:	c7 5e       	subi	r28, 0xE7	; 231
 282:	01 c0       	rjmp	.+2      	; 0x286 <main+0x2c>
	{
		if( DIO_vReadPin((u8) 'B' ,(u8) 0))
		{
			if(brightness >= (uint8_t) 250)
			{
				brightness= (uint8_t) 0;
 284:	c0 e0       	ldi	r28, 0x00	; 0
			}
			else 
			{
				brightness += (uint8_t) 25;
			}
			SET_PWM_OUTPUT(brightness);
 286:	8c 2f       	mov	r24, r28
 288:	0e 94 2b 01 	call	0x256	; 0x256 <SET_PWM_OUTPUT>
			/* holds button untill it to be 0 */
			while(DIO_vReadPin( (u8) 'B', (u8) 0) ){};
 28c:	60 e0       	ldi	r22, 0x00	; 0
 28e:	82 e4       	ldi	r24, 0x42	; 66
 290:	0e 94 bf 00 	call	0x17e	; 0x17e <DIO_vReadPin>
 294:	81 11       	cpse	r24, r1
 296:	fa cf       	rjmp	.-12     	; 0x28c <main+0x32>
 298:	eb cf       	rjmp	.-42     	; 0x270 <main+0x16>

0000029a <_exit>:
 29a:	f8 94       	cli

0000029c <__stop_program>:
 29c:	ff cf       	rjmp	.-2      	; 0x29c <__stop_program>
